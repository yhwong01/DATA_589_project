---
title: "zefeng's_work"
format: html
editor: visual
---

## deer_ppp vs elevation

### get data

```{r}
load("data/deer_clean_covariates.RData")
ls()
```

```{r}
library(sf)
library(spatstat.geom)
library(readr)

win_bc_sf <- st_as_sf(valid_window)
win_bc <- as.owin(win_bc_sf)
elevation_im <- as.im(elev_clean)
```

### analysis

```{r}
library(spatstat.explore)
elevation_im <- as.im(elevation_im, W = win_bc)
rho_elev <- rhohat(deer_clean, elevation_im)
plot(rho_elev, main = "Intensity of Deer vs Elevation")
```

The nonparametric estimate of spatial intensity reveals that deer are most frequently observed at elevations around 1000 to 1500 meters, with several local peaks. The average intensity curve exceeds the global average in these regions, indicating elevation-specific habitat preferences. However, the wide confidence bands at the extremes—especially above 2000 meters—suggest high uncertainty due to sparse data, and these fluctuations should be interpreted cautiously.

### model

```{r}
library(spatstat.geom)
library(spatstat.model)
library(spatstat.explore)  

elev_logical_im <- elevation_im
elev_logical_im$v <- !is.na(elevation_im$v)
elev_window <- as.owin(elev_logical_im)

deer_trimmed <- deer_clean[elev_window]

elevation_crop <- as.im(elevation_im, W = elev_window)

dummy_raw <- gridcentres(elev_window, nx = 100, ny = 100)

dummy_ppp <- ppp(x = dummy_raw$x,
                 y = dummy_raw$y,
                 window = elev_window)

dummy_df <- as.data.frame(dummy_ppp)
elev_values <- lookup.im(elevation_crop, dummy_df$x, dummy_df$y, naok = TRUE)

dummy_filtered <- dummy_ppp[!is.na(elev_values)]


Q <- quadscheme.logi(
  data = deer_trimmed,
  dummy = dummy_filtered,
  logical = elev_logical_im
)

model_quad <- ppm(Q, ~ elev + I(elev^2), 
                  covariates = list(elev = elevation_crop),
                  method = "logi")

summary(model_quad)



```

A Poisson point process model with elevation and elevation squared as covariates showed a significant nonlinear relationship between elevation and deer occurrence intensity. The negative linear and positive quadratic terms indicate a U-shaped pattern, with higher deer intensity at both low and high elevations. All coefficients were statistically significant, and the model effectively captured spatial variation in deer distribution driven by topography.

```{r}
coefs <- coef(model_quad)
beta0 <- coefs["(Intercept)"]
beta1 <- coefs["elev"]
beta2 <- coefs["I(elev^2)"]

elev_seq <- seq(0, 2000, length.out = 200)

intensity <- exp(beta0 + beta1 * elev_seq + beta2 * elev_seq^2)

plot(elev_seq, intensity, type = "l", lwd = 2, col = "blue",
     xlab = "Elevation (m)", ylab = "Fitted Intensity",
     main = "Fitted Intensity vs Elevation")
```

elevation, where deer density is higher at both low and high elevations and lowest in mid-elevation zones. This pattern supports the model's nonlinear trend and suggests that elevation plays a significant role in shaping the spatial distribution of deer. The decline in intensity across mid-elevation areas may reflect habitat transitions or movement corridors, while the peaks at lower and higher elevations could correspond to preferred foraging or seasonal ranges. Overall, the model captures a meaningful ecological gradient linked to topography.

```{r}
library(viridis)
intensity_im <- predict(model_quad, eps = 2000)
plot(intensity_im,
     main = "Fitted Intensity Surface over BC",
     col = viridis(128),
     ribbon = TRUE,
     gamma = 0.5,   
     box = FALSE)

```

> The fitted intensity surface indicates that deer observations are spatially concentrated in specific southern and southeastern regions of British Columbia. These areas correspond to zones of either low or high elevation, as supported by the non-linear elevation model. Most of the province shows very low predicted intensity, suggesting deer are sparse in large portions of BC. The color scale confirms that intensity values are overall very low, reflecting the rare nature of sightings in this dataset.

```{r}
library(ggplot2)

coefs <- coef(model_quad)
vcov_mat <- vcov(model_quad)

elev_seq <- seq(0, 2000, length.out = 300)
X <- cbind(1, elev_seq, elev_seq^2)

log_lambda_hat <- as.vector(X %*% coefs)
se_log_lambda <- sqrt(rowSums((X %*% vcov_mat) * X))

fitted <- exp(log_lambda_hat)
upper <- exp(log_lambda_hat + 2 * se_log_lambda)
lower <- exp(log_lambda_hat - 2 * se_log_lambda)

df <- data.frame(
  Elevation = elev_seq,
  Intensity = fitted,
  Lower = lower,
  Upper = upper
)

ggplot(df, aes(x = Elevation, y = Intensity)) +
  geom_ribbon(aes(ymin = Lower, ymax = Upper), fill = "skyblue", alpha = 0.3) +
  geom_line(color = "darkblue", size = 1.2) +
  labs(
    title = "Predicted Intensity vs Elevation (with 95% CI)",
    x = "Elevation (m)",
    y = "Predicted Intensity"
  ) +
  coord_cartesian(ylim = c(0, 1e-8)) +
  theme_minimal(base_size = 14)

```
